{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from \"react\"; // import Router from \"next/router\";\n// import cookie from \"js-cookie\";\n// import Link from \"next/link\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\nimport Layout from \"../components/Layout\";\nimport axios from \"axios\";\n\nvar Login = function Login() {\n  var _useState = useState(\"\"),\n      loginError = _useState[0],\n      setLoginError = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      password = _useState3[0],\n      setPassword = _useState3[1];\n\n  var useStyles = makeStyles(function (theme) {\n    return {\n      root: {\n        '& .MuiTextField-root': {\n          margin: theme.spacing(1),\n          width: '25ch'\n        }\n      }\n    };\n  });\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    var classes = useStyles();\n    axios.post(\"https://api.wodworx.com/v1/user/login\", {\n      email: email,\n      password: password\n    }).then(function (res) {\n      console.log(\"res\", res);\n\n      if (res.data.token) {\n        AsyncStorage.setItem(\"token\", JSON.stringify(res.data.token)); // cookie.set('token', data.token, {expires: 2});\n      } else {\n        if (res.data.errors.password === \"Incorrect email or password\") {\n          alert(\"Incorrect email or password\");\n        }\n\n        if (res.data.errors.email === \"Email cannot be blank.\") {\n          alert(\"Email cannot be blank.\");\n        }\n\n        if (res.data.errors.password === \"password cannot be blank.\") {\n          alert(\"password cannot be blank.\");\n        }\n\n        if (res.data.errors.email === \"Email is not a valid email address.\") {\n          alert(\"Email cannot be blank.\");\n        }\n      }\n    })[\"catch\"](function (err) {\n      console.log(\"error in request\", err);\n    });\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Layout, null), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\"\n  }, __jsx(TextField, {\n    id: \"filled-textarea\",\n    label: \"Multiline Placeholder\",\n    placeholder: \"Placeholder\",\n    multiline: true,\n    variant: \"filled\"\n  }), __jsx(Button, {\n    type: \"submit\",\n    value: \"Submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    disableElevation: true\n  }, \" Login\"), loginError && __jsx(\"p\", {\n    style: {\n      color: \"red\"\n    }\n  }, loginError)));\n};\n\nexport default Login;","map":null,"metadata":{},"sourceType":"module"}