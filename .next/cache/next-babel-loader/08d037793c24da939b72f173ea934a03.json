{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport cookie from \"js-cookie\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Layout from \"../components/Layout\";\n\nfunction Copyright() {\n  return __jsx(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    align: \"center\"\n  }, \"Copyright Â© \", __jsx(Link, {\n    color: \"inherit\",\n    href: \"https://material-ui.com/\"\n  }, \"Your Website\"), \" \", new Date().getFullYear(), \".\");\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\nexport default function SignIn() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    Email: \"\",\n    password: \"\"\n  });\n\n  const handleChange = prop => event => {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      [prop]: event.target.value\n    }));\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    var email = document.getElementById(\"email\").value;\n    var password = document.getElementById(\"password\").value;\n    const user = {\n      email: email,\n      password: password\n    };\n    axios.post(\"https://cors-anywhere.herokuapp.com/https://api.wodworx.com/v1/user/login\", user, {\n      headers: {\n        Origin: \"X-Requested-With\"\n      }\n    }).then(res => {\n      // console.log(\"res\", res);\n      // console.log(\"fnhh\", res);\n      console.log(\"sura123\", res.request.response);\n      console.log(\"sura12311111\", res.request.response[\"success\"]); // console.log(\"suraaa\",Object.keys(res.request.response.data.errors.password));\n\n      console.log(\"suraaa77\", Object.keys(res.request.response)); // console.log(\"fnhzah\", res.request);\n\n      if (res.data.token) {\n        AsyncStorage.setItem(\"token\", JSON.stringify(res.data.token)); // cookie.set('token', data.token, {expires: 2});\n      } else {\n        if (res.response.request.data.errors.password === \"Incorrect email or password\") {\n          alert(\"Incorrect email or password\");\n        }\n\n        if (res.data.errors.email === \"Email cannot be blank.\") {\n          alert(\"Email cannot be blank.\");\n        }\n\n        if (res.data.errors.password === \"password cannot be blank.\") {\n          alert(\"password cannot be blank.\");\n        }\n\n        if (res.data.errors.email === \"Email is not a valid email address.\") {\n          alert(\"Email cannot be blank.\");\n        }\n      }\n    }).catch(err => {\n      console.log(\"error in request\", err);\n    });\n  };\n\n  return __jsx(Container, {\n    component: \"main\",\n    maxWidth: \"xs\"\n  }, __jsx(CssBaseline, null), __jsx(Layout, null), __jsx(\"div\", {\n    className: classes.paper\n  }, __jsx(Avatar, {\n    className: classes.avatar\n  }, __jsx(\"img\", {\n    src: \"/static/logo.png\",\n    alt: \"logo\",\n    height: \"50\"\n  })), __jsx(Typography, {\n    component: \"h1\",\n    variant: \"h5\"\n  }, \"Sign in\"), __jsx(\"form\", {\n    className: classes.form,\n    onSubmit: onSubmit,\n    method: \"post\",\n    noValidate: true\n  }, __jsx(TextField, {\n    value: values.Email,\n    onChange: handleChange(\"Email\"),\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"email\",\n    label: \"Email Address\",\n    name: \"email\",\n    autoComplete: \"email\",\n    autoFocus: true\n  }), __jsx(TextField, {\n    value: values.password,\n    onChange: handleChange(\"password\"),\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: \"Password\",\n    id: \"password\",\n    type: \"password\",\n    autoComplete: \"current-password\"\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      value: \"remember\",\n      color: \"primary\"\n    }),\n    label: \"Remember me\"\n  }), __jsx(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit\n  }, \"Sign In\"), __jsx(Grid, {\n    container: true\n  }, __jsx(Grid, {\n    item: true,\n    xs: true\n  }), __jsx(Grid, {\n    item: true\n  }, __jsx(Link, {\n    href: \"signup\",\n    variant: \"body2\"\n  }, \"Don't have an account? Sign Up\")), __jsx(Grid, {\n    item: true\n  }, __jsx(\"p\", {\n    id: \"result\"\n  }))))), __jsx(Box, {\n    mt: 8\n  }, __jsx(Copyright, null)));\n}","map":null,"metadata":{},"sourceType":"module"}